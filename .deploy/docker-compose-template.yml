version: "3.9"
services:
  "${APP_NAME}":
    image: ghcr.io/${IMAGE_REPO}:${RELEASE_VERSION}
    restart: always
    network_mode: bridge
    ports:
      - "5002:80"
    environment:
      VIRTUAL_HOST: ${HOST_DOMAIN}
      LETSENCRYPT_HOST: ${HOST_DOMAIN}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
      DEPLOY_API: ${DEPLOY_API}
      DEPLOY_CDN: ${DEPLOY_CDN}
      ConnectionStrings__DefaultConnection: ${DEFAULTCONNECTION}
      AuthKeyBase64: ${AUTHKEYBASE64}
      Oura__Pat: ${Oura__Pat}
      EMAIL: ${EMAIL}
      PASSWORD: ${PASSWORD}
      SERVICESTACK_LICENSE: ${SERVICESTACK_LICENSE}
      BASE_URI: ${BASE_URI}
      CLIENTID: ${CLIENTID}
      CLIENT_SECRET: ${CLIENT_SECRET}
      TENANTID: ${TENANTID}
      CRON: ${CRON}
      ConnectionStrings__Mongo: ${MONGO}
      ADLS_URI: ${ADLS_URI}
      DD_ENV: 'Production'
      DD_SERVICE: ${APP_NAME}
      DD_VERSION: ${RELEASE_VERSION}
    labels:
      com.datadoghq.ad.logs: '[{"source": "csharp", "service": "${APP_NAME}"}]'
      com.datadoghq.tags.env: 'Production'
      com.datadoghq.tags.service: '${APP_NAME}'
      com.datadoghq.tags.version: '${RELEASE_VERSION}'
  datadog:
    image: gcr.io/datadoghq/agent:7
    pid: host
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_SITE=${DD_SITE}
      - DD_LOGS_ENABLED=true
      - DD_LOGS_INJECTION=true
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_APPSEC_ENABLED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc:ro
      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
